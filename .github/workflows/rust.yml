name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest

    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - uses: actions/checkout@v4
    - name: Install Rust
      run: |
        which cargo || rm -rf $HOME/.rustup && rm -rf $HOME/.cargo && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
    - name: Verify code using Clippy
      run: cargo clippy --verbose --release
    - name: Verify formatting
      run: cargo fmt --check --verbose
    - name: Run tests
      run: cargo test --verbose --release

  build_linux:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - uses: actions/checkout@v4
    - name: Install Rust
      run: |
        which cargo || rm -rf $HOME/.rustup && rm -rf $HOME/.cargo && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
    - name: Build code on Linux
      run: cargo build --verbose --release
    - uses: actions/upload-artifact@v4
      with:
        name: linux-esci
        path: target/release/esci

  build_windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - uses: actions/checkout@v4
    - name: Install Rust
      run: |
        which cargo || rm -rf $HOME/.rustup && rm -rf $HOME/.cargo && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        export PATH="$HOME/.cargo/bin:$PATH"
    - name: Build code on Windows
      run: cargo build --verbose --release
    - uses: actions/upload-artifact@v4
      with:
        name: windows-esci
        path: target/release/esci.exe

  build_macos_silicon:
    runs-on: macos-latest

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - uses: actions/checkout@v4
    - name: Install Rust
      run: |
        which cargo || rm -rf $HOME/.rustup && rm -rf $HOME/.cargo && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
    - name: Build code on MacOS Silicon
      run: cargo build --verbose --release
    - uses: actions/upload-artifact@v4
      with:
        name: macos-silicon-esci
        path: target/release/esci

  build_macos_intel:
    runs-on: macos-13

    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - uses: actions/checkout@v4
    - name: Install Rust
      run: |
        which cargo || rm -rf $HOME/.rustup && rm -rf $HOME/.cargo && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
    - name: Build code on MacOS Intel
      run: cargo build --verbose --release
    - uses: actions/upload-artifact@v4
      with:
        name: macos-intel-esci
        path: target/release/esci
